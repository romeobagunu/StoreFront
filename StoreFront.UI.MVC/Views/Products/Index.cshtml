@model PagedList.IPagedList<StoreFront.Data.EF.Product>
@* Replaced IEnumerable with PagedList *@
@using PagedList.Mvc

@{
    ViewBag.Title = "Products";
}

<!-- Products Page Header -->
<section class="page-header">
    <div class="container px-3 py-0">
        <h1>@ViewBag.Title</h1>
    </div>
</section>

<div class="min-vh-100 bg-white">

    <!-- Products Section -->
    <section class="row px-5 py-3">

        <!-- Products Side Bar -->
        <aside class="col-lg-3">

            <!-- Admin Buttons Side Bar Section -->
            <section>
                @if (User.IsInRole("Admin"))
                {
                    <h3 class="my-3">Admin Buttons</h3>
                    <p>
                        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
                    </p>
                    <p>
                        @Html.ActionLink("Edit Categories", "Index", "Categories", null, new { @class = "btn btn-secondary" })
                    </p>
                }
            </section>

            <!-- Filters Side Bar Section -->
            <section>
                <div class="my-3">
                    <button id="toggleProductsFilters" class="btn btn-primary btn-sm">Filter Products</button>
                </div>
                <div id="ProductsFilters">
                    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                    {
                        <label for="searchFilter" class="text-gray-800 text-uppercase my-3">Search by Product: </label>
                        @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control my-2" })
                        <input type="submit" value="Search" class="btn btn-primary btn-sm my-2" />
                    }

                    <label class="text-gray-800 text-uppercase my-3">Filter by Category:</label>
                    @{
                        string categoryText = "";
                        foreach (string catName in ViewBag.CategoriesList)
                        {
                            if (ViewBag.CategoryFilter == catName) { categoryText = "text-decoration-underline"; } else { categoryText = "text-gray-500"; }
                            <a href="@Url.Action("Index", routeValues: new { searchString = ViewBag.SearchString, categoryFilter = catName, page = 1 })" class="@categoryText d-block my-2">@catName</a>
                        }
                    }


                    @Html.ActionLink("Reset", "Index", "Products", null, new { @class = "btn btn-danger my-3" })

                </div>
            </section>
        </aside>

        <!-- Products Display Table -->
        <div class="col-lg-9">
            <table class="table mb-0">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ProductImage)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.UnitsInStock)
                    </th>*@
                    @*<th>
                        @Html.DisplayNameFor(model => model.DateReleased)
                    </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Category.CategoryName)
                    </th>
                    @*<th>
                        @Html.DisplayNameFor(model => model.ProductStatus.Status)
                    </th>*@
                    <th></th>
                    @if (User.IsInRole("Admin"))
                    {
                        <th></th>
                    }
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img src="~/Content/img/t_@item.ProductImage" alt="@item.ProductName" href="@Url.Action("Details", new { id = item.ProductID })">
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.UnitsInStock)
                        </td>*@
                        @*<td>
                            @Html.DisplayFor(modelItem => item.DateReleased)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.ProductStatus.Status)
                        </td>*@
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = item.ProductID }, new { @class = "text-muted" })

                        </td>
                        @if (User.IsInRole("Admin"))
                        {
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }, new { @class = "link-info" }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.ProductID }, new { @class = "link-danger" })
                            </td>
                        }
                    </tr>
                }
            </table>
            <div class="d-flex mt-0">
                <div class="d-inline-block">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.SearchString, categoryFilter = ViewBag.CategoryFilter }))
                </div>
                <p class="my-auto text-muted d-inline-block" style="margin-left: 10px;">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </p>
            </div>
        </div>
    </section>
</div>

@section scripts {
    <script>

        $("#toggleProductsFilters").hide();

        var viewportWidthInitial = $(window).width();
        if (viewportWidthInitial < 992) {
            $("#ProductsFilters").hide();
            $("#toggleProductsFilters").show();
            $("#toggleProductsFilters").click(function () {
                $("#ProductsFilters").toggle();
            });
        }

        $(window).on('resize', function (e) {
            var viewportWidthDynamic = $(window).width();
            if (viewportWidthDynamic < 992) {
                $("#ProductsFilters").hide();
                $("#toggleProductsFilters").show();
                $("#toggleProductsFilters").click(function () {
                    $("#ProductsFilters").toggle();
                });
            }
            else {
                $("#ProductsFilters").show();
                $("#toggleProductsFilters").hide();
            }
        });
    </script>
}
