@model PagedList.IPagedList<StoreFront.Data.EF.Product>
@* Replaced IEnumerable with PagedList *@
@using PagedList.Mvc

@{
    ViewBag.Title = "Products";
}

<!-- Products Page Header -->
<section class="page-header">
    <div class="container px-3 py-0">
        <h1>@ViewBag.Title</h1>
    </div>
</section>

<div class="min-vh-100 bg-white">

    <!-- Products Section -->
    <section class="row px-5 py-3">

        <!-- Products Side Bar -->
        <aside class="col-lg-3">
            @if (User.IsInRole("Admin"))
            {
                <!-- Admin Buttons Side Bar Section -->
                <section>
                    <div class="my-3">
                        <button id="toggleAdminButtons" class="btn btn-primary btn-sm">Admin Buttons</button>
                    </div>
                    <div id="AdminButtons">
                        <h3 class="my-3">Admin Buttons</h3>
                        <p>
                            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
                        </p>
                        <p>
                            @Html.ActionLink("Edit Categories", "Index", "Categories", null, new { @class = "btn btn-secondary" })
                        </p>
                    </div>
                </section>
            }

            <!-- Filters Side Bar Section -->
            <section>
                <div class="my-3">
                    <button id="toggleProductsFilters" class="btn btn-primary btn-sm">Filter Products</button>
                </div>
                <div id="ProductsFilters">
                    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
                    {
                        <label for="searchFilter" class="text-gray-800 text-uppercase my-3">Search by Product: </label>
                        @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control my-2" })
                        <input type="submit" value="Search" class="btn btn-primary btn-sm my-2" />
                    }

                    <label class="text-gray-800 text-uppercase my-3">Filter by Category:</label>
                    @{
                        string categoryText = "";
                        foreach (string catName in ViewBag.CategoriesList)
                        {
                            if (ViewBag.CategoryFilter == catName)
                            {
                                categoryText = "font-weight-700 text-primary";
                            }
                            else
                            {
                                categoryText = "text-gray-500";
                            }
                            <p class="@categoryText">
                                <a href="@Url.Action("Index", routeValues: new { searchString = ViewBag.SearchString, categoryFilter = catName, page = 1 })" class="text-inherit">
                                    @catName
                                </a>
                            </p>
                        }
                    }


                    @Html.ActionLink("Reset", "Index", "Products", null, new { @class = "btn btn-danger my-3" })

                </div>
            </section>
        </aside>

        <!-- Products Grid -->
        <div class="col-lg-9">
            <div class="row gx-2 d-flex justify-content-between">
                @foreach (var item in Model)
                {
                    <div class="col-md-5 col-sm-11 product-card my-3 mx-3 p-4">
                        <div class="product-img">
                            <a href="@Url.Action("Details", new { id = item.ProductID })">
                                <img class="img-fluid" src="~/Content/img/t_@item.ProductImage" alt="@item.ProductName">
                            </a>
                        </div>
                        <div class="product-text">
                            <a href="@Url.Action("Details", new { id = item.ProductID })">
                                @{ 
                                    string ProductNameClass = "";
                                    if (item.Category.CategoryName == "NES")
                                    {
                                        ProductNameClass = "text-pixel";
                                    }
                                    else
                                    {
                                        ProductNameClass = "";
                                    }
                                }
                                <h3 class="my-2 @ProductNameClass">
                                    @item.ProductName
                                    <span class="text-muted">
                                        (@item.DateReleased.Value.Year)
                                    </span>
                                </h3>
                            </a>
                            <p class="text-success">
                                @string.Format($"{item.Price:c}")
                            </p>
                            @if (User.IsInRole("Admin"))
                            {
                                <p class="my-1">
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }, new { @class = "btn-info btn-sm" })
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductID }, new { @class = "btn-danger btn-sm" })
                                </p>
                            }
                        </div>
                        <div class="clearfix"></div>
                    </div>
                }
            </div>


            <div class="d-flex mt-0">
                <div class="d-inline-block">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = ViewBag.SearchString, categoryFilter = ViewBag.CategoryFilter }))
                </div>
                <p class="my-auto text-muted d-inline-block" style="margin-left: 10px;">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </p>
            </div>
        </div>
    </section>
</div>

@section scripts {
    <script>

        $("#toggleProductsFilters").hide();

        var viewportWidthInitial = $(window).width();
        if (viewportWidthInitial < 992) {
            $("#ProductsFilters").hide();
            $("#toggleProductsFilters").show();
            $("#toggleProductsFilters").click(function () {
                $("#ProductsFilters").toggle();
            });
        }

        $(window).on('resize', function (e) {
            var viewportWidthDynamic = $(window).width();
            if (viewportWidthDynamic < 992) {
                $("#ProductsFilters").hide();
                $("#toggleProductsFilters").show();
                $("#toggleProductsFilters").click(function () {
                    $("#ProductsFilters").toggle();
                });
            }
            else {
                $("#ProductsFilters").show();
                $("#toggleProductsFilters").hide();
            }
        });

        $("#toggleAdminButtons").hide();

        var viewportWidthInitial = $(window).width();
        if (viewportWidthInitial < 992) {
            $("#AdminButtons").hide();
            $("#toggleAdminButtons").show();
            $("#toggleAdminButtons").click(function () {
                $("#AdminButtons").toggle();
            });
        }

        $(window).on('resize', function (e) {
            var viewportWidthDynamic = $(window).width();
            if (viewportWidthDynamic < 992) {
                $("#AdminButtons").hide();
                $("#toggleAdminButtons").show();
                $("#toggleAdminButtons").click(function () {
                    $("#AdminButtons").toggle();
                });
            }
            else {
                $("#AdminButtons").show();
                $("#toggleAdminButtons").hide();
            }
        });

    </script>
}
